{
   "StartAt":"SCHEDULING_INITIAL_WAIT",
   "States":{
      "SCHEDULING_INITIAL_WAIT":{
         "Type":"Wait",
         "TimestampPath":"$.waitUntilTimestamp",
         "Next":"SCHEDULING_PRE_PROCESS"
      },
      "SCHEDULING_PRE_PROCESS":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName.$":"$.preProcess",
            "Payload":{
               "taskId.$":"$.taskId"
            }
         },
         "Catch":[
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "ResultPath": "$.errorInfo",
               "Next":"SCHEDULING_ERROR"
            }
         ],
         "Next":"SCHEDULING_PROCESS"
      },
      "SCHEDULING_PROCESS":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName.$":"$.Payload.process",
            "Payload":{
               "taskId.$":"$.Payload.taskId"
            }
         },
         "Catch":[
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "ResultPath": "$.errorInfo",
               "Next":"SCHEDULING_ERROR"
            }
         ],
         "Next":"SCHEDULING_POST_PROCESS"
      },
      "SCHEDULING_POST_PROCESS":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName.$":"$.Payload.postProcess",
            "Payload":{
               "taskId.$":"$.Payload.taskId"
            }
         },
         "Catch":[
            {
               "ErrorEquals":[
                  "States.ALL"
               ],
               "ResultPath": "$.errorInfo",
               "Next":"SCHEDULING_ERROR"
            }
         ],
         "Next":"SCHEDULING_END"
      },
      "SCHEDULING_ERROR":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName":"error",
            "Payload":{
               "taskId.$":"$.taskId",
               "error.$":"$.errorInfo"
            }
         },
         "End":true
      },
      "SCHEDULING_END":{
         "Type":"Task",
         "Resource":"arn:aws:states:::lambda:invoke",
         "Parameters":{
            "FunctionName":"$.Payload.end",
            "Payload":{
               "taskId.$":"$.Payload.taskId"
            }
         },
         "End":true
      }
   }
}